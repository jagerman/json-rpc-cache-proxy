worker_processes auto;
error_log /dev/stderr notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /usr/local/openresty/nginx/conf/mime.types;
    default_type application/octet-stream;

    lua_package_path "/usr/local/openresty/lualib/?.lua;;";

    init_by_lua_block {
        require "resty.core"
        cjson = require "cjson"
    }

    set_real_ip_from DOCKER_SUBNET;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    proxy_set_header X-Real-IP $remote_addr;

    log_format detailed_json escape=json '{'
        '"remote_addr":"$remote_addr",'
        '"x_real_ip":"$http_x_real_ip",'
        '"x_forwarded_for":"$http_x_forwarded_for",'
        '"request_uri":"$request_uri",'
        '"request_body":"$modified_body",'
        '"status": "$status",'
        '"upstream_cache_status":"$upstream_cache_status",'
        '"upstream_response_time":"$upstream_response_time",'
        '"cache_key":"$cache_key"'
    '}';

    access_log /dev/stdout detailed_json;

    sendfile on;
    keepalive_timeout 65;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    include /usr/local/openresty/nginx/conf/conf.d/upstreams/*.conf;

    limit_req_zone $binary_remote_addr zone=json_rpc_limit:10m rate=20r/s;

    proxy_cache_path /var/cache/nginx/json_rpc_cache_proxy levels=1:2 keys_zone=json_rpc_cache:10m max_size=10g inactive=60m use_temp_path=off;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        server_name _;

        set $cache_key "";
        set $modified_body "";

        include /usr/local/openresty/nginx/conf/conf.d/locations/*.conf;

        location / {
            return 404 "No RPC endpoint configured for this path.\n";
        }
    }
}